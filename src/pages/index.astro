---
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../consts";
---

<!DOCTYPE html>
<html lang="en">
 <head>
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
 </head>
 <body>
  <Header title={SITE_TITLE} />
  <main class="bg-black">
   <a href="https://cicada.build" target="_blank" rel="noopener noreferrer" class="mb-8">
    <div
     class="rounded-full px-4 py-1 w-max mx-auto bg-dark-info-bg-active/50 border border-dark-info-border-active relative animate-shine before:absolute before:inset-0 before:transform before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:filter before:from-dark-info-border-active/0 before:via-dark-info-border-active/40 before:to-dark-info-border-active/0 isolate overflow-hidden mb-0"
    >
     <span class="relative z-10 flex items-center"
      ><svg
       stroke="currentColor"
       fill="currentColor"
       stroke-width="0"
       viewBox="0 0 20 20"
       aria-hidden="true"
       class="w-3 h-3 relative -left-1 opacity-80 text-dark-info-text-active"
       height="1em"
       width="1em"
       xmlns="http://www.w3.org/2000/svg"
       ><path
        fill-rule="evenodd"
        d="M5 2a1 1 0 011 1v1h1a1 1 0 010 2H6v1a1 1 0 01-2 0V6H3a1 1 0 010-2h1V3a1 1 0 011-1zm0 10a1 1 0 011 1v1h1a1 1 0 110 2H6v1a1 1 0 11-2 0v-1H3a1 1 0 110-2h1v-1a1 1 0 011-1zM12 2a1 1 0 01.967.744L14.146 7.2 17.5 9.134a1 1 0 010 1.732l-3.354 1.935-1.18 4.455a1 1 0 01-1.933 0L9.854 12.8 6.5 10.866a1 1 0 010-1.732l3.354-1.935 1.18-4.455A1 1 0 0112 2z"
        clip-rule="evenodd"></path></svg
      ><p class="tracking-normal text-xs font-medium text-dark-info-text-active">
       Introducing Cicada â€” Write CI/CD pipelines in TypeScript
      </p></span
     >
    </div></a
   >
  </main>
  <Footer />
  <style is:global>
   @keyframes shine {
    0% {
     filter: brightness(100%);
    }

    50% {
     filter: brightness(150%);
    }

    to {
     filter: brightness(100%);
    }
   }

   .border-dark-info-border-active {
    --tw-border-opacity: 1;
    border-color: rgb(59 130 246 / var(--tw-border-opacity));
   }

   .border-light-info-border,
   .border-light-info-border-active {
    --tw-border-opacity: 1;
    border-color: rgb(37 99 235 / var(--tw-border-opacity));
   }

   .bg-dark-info-bg {
    --tw-bg-opacity: 1;
    background-color: rgb(59 130 246 / var(--tw-bg-opacity));
   }

   .bg-dark-info-bg-active\/50 {
    background-color: rgba(30, 58, 138, 0.5);
   }

   .text-dark-info-text-active {
    --tw-text-opacity: 1;
    color: rgb(147 197 253 / var(--tw-text-opacity));
   }
   .before\:-translate-x-full:before,
   .before\:transform:before {
    content: var(--tw-content);
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
     rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
     scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }

   @keyframes shimmer {
    to {
     content: var(--tw-content);
     transform: translateX(100%);
    }
   }

   .before\:animate-shimmer:before {
    content: var(--tw-content);
    animation: shimmer 4s ease-in-out infinite;
   }

   .before\:animate-shimmer:before {
    content: var(--tw-content);
    animation: shimmer 4s ease-in-out infinite;
   }

   .animate-shine {
    animation: shine 4s ease-in-out infinite;
   }
  </style>
 </body>
</html>
